{"version":3,"sources":["TodoListTitle.jsx","AddNewItemForm.js","DeleteItemButton.js","TodoListHeader.jsx","TodoListTask.jsx","TodoListTasks.jsx","TodoListFooter.jsx","reducer.js","api.js","TodoList.js","App.js","serviceWorker.js","store.js","index.js"],"names":["TodoListTitle","state","isEdit","title","_this","props","todoListTitle","activateEditMode","setState","deactivateEditMode","changeTodolist","onInputChanged","e","currentTarget","value","_handleKeyDown","key","render","react_default","a","createElement","onBlur","onChange","autoFocus","onKeyDown","onClick","React","Component","AddNewItemForm","error","onAddItemClick","addItem","inputOnChange","trim","inputOnKeyPress","classForInput","className","onKeyPress","type","placeholder","DeleteItemButton","delete","TodoListHeader","src_TodoListTitle","src_DeleteItemButton","deleteTodolist","src_AddNewItemForm","TodoListTask","task","updatedTask","_objectSpread","changeTask","id","onIsDoneChanged","status","checked","isDone","classForTask","priority","deleteTask","TodoListTasks","tasksElements","tasks","filter","filterValue","map","src_TodoListTask","TodoListFooter","isHidden","onAllFilterClick","changeFilter","onCompletedFilterClick","onActiveFilterClick","onShowOrHideFiltersClick","classForAll","classForCompleted","classForActive","ADD_TASK","initialState","todolists","reducer","arguments","length","undefined","action","reducer_objectSpread","tl","newTodoList","newTodolist","concat","Object","toConsumableArray","todolistId","newTask","t","taskId","obj","newTitle","console","log","instance","axios","create","baseURL","withCredentials","headers","API-KEY","api","setTasks","get","addTask","post","put","setTodolists","addTodolist","TodoList","newFilterValue","restoreState","then","res","data","items","item","src_TodoListHeader","src_TodoListTasks","src_TodoListFooter","this","ConnectedTodolist","connect","App","addTodoList","todolist","todoListElements","src_TodoList","ConnectedApp","Boolean","window","location","hostname","match","store","createStore","ReactDOM","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e6fe0c52.chunk.js","sourcesContent":["import React from 'react';\n\nclass TodoListTitle extends React.Component {\n    state = {\n        isEdit: false,\n        title: this.props.todoListTitle\n    };\n\n    activateEditMode = () => {\n        this.setState({\n            isEdit: true\n        })\n    };\n\n    deactivateEditMode = () => {\n        this.props.changeTodolist(this.state.title);\n\n        this.setState({\n            isEdit: false\n        });\n    };\n\n    onInputChanged = (e) => {\n        this.setState({title: e.currentTarget.value});\n    };\n\n    _handleKeyDown = (e) => {\n        if (e.key === 'Enter') {\n            this.deactivateEditMode();\n        }\n    };\n\n    render = () => {\n        return (\n            <div>\n                {this.state.isEdit\n                    ? <input onBlur={this.deactivateEditMode}\n                             onChange={this.onInputChanged}\n                             autoFocus={true}\n                             value={this.state.title}\n                             onKeyDown={this._handleKeyDown}/>\n                    : <h3 onClick={this.activateEditMode}>{this.state.title}</h3>}\n            </div>);\n    }\n}\n\nexport default TodoListTitle;","import React from 'react';\r\n\r\nclass AddNewItemForm extends React.Component {\r\n    state = {\r\n        error: true,\r\n        title: ''\r\n    };\r\n\r\n    onAddItemClick = () => {\r\n        if (!this.state.error) {\r\n            this.props.addItem(this.state.title);\r\n            this.setState({error: true, title: ''});\r\n        }\r\n    };\r\n\r\n    inputOnChange = (e) => {\r\n        if (e.currentTarget.value.trim() === '') {\r\n            this.setState({error: true, title: ''})\r\n        } else {\r\n            this.setState({\r\n                error: false, title: e.currentTarget.value\r\n            })\r\n        }\r\n    };\r\n\r\n    inputOnKeyPress = (e) => {\r\n        if (e.key === 'Enter')\r\n            this.onAddItemClick(e);\r\n    };\r\n\r\n    render = () => {\r\n        const classForInput = this.state.error ? 'error' : '';\r\n\r\n        return (\r\n            <div className=\"todoList-newItemForm\">\r\n                <input onKeyPress={this.inputOnKeyPress} onChange={this.inputOnChange} className={classForInput}\r\n                       type=\"text\"\r\n                       placeholder=\"New item name\"\r\n                       value={this.state.title}/>\r\n                <button onClick={this.onAddItemClick}>Add</button>\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport default AddNewItemForm;","import React from 'react';\r\n\r\nclass DeleteItemButton extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <button onClick={this.props.delete}>X</button>);\r\n    }\r\n}\r\n\r\nexport default DeleteItemButton;","import React from 'react';\nimport TodoListTitle from \"./TodoListTitle\";\nimport AddNewItemForm from \"./AddNewItemForm\";\nimport DeleteItemButton from \"./DeleteItemButton\";\n\nclass TodoListHeader extends React.Component {\n    render = () => {\n        return (\n            <div>\n                <div className=\"todoList-header\">\n                    <TodoListTitle todoListTitle={this.props.todoListTitle} changeTodolist={this.props.changeTodolist}/>\n                    <DeleteItemButton delete={this.props.deleteTodolist}/>\n                </div>\n                <AddNewItemForm addItem={this.props.addItem}/>\n            </div>);\n    }\n}\n\nexport default TodoListHeader;","import React from 'react';\nimport DeleteItemButton from \"./DeleteItemButton\";\n\nclass TodoListTask extends React.Component {\n    state = {\n        isEdit: false,\n        title: this.props.task.title\n    };\n\n    activateEditMode = () => {\n        this.setState({\n            isEdit: true\n        })\n    };\n\n    deactivateEditMode = () => {\n        let updatedTask = {...this.props.task, title: this.state.title};\n        this.props.changeTask(this.props.task.id, updatedTask);\n\n        this.setState({\n            isEdit: false\n        });\n    };\n\n    onIsDoneChanged = (e) => {\n        let status = e.currentTarget.checked ? 2 : 0;\n        let updatedTask = {...this.props.task, status};\n        this.props.changeTask(this.props.task.id, updatedTask);\n    };\n\n    onInputChanged = (e) => {\n        this.setState({title: e.currentTarget.value});\n    };\n\n    render = () => {\n        const isDone = (this.props.task.status === 2);\n\n        const classForTask = isDone ? 'todoList-task done' : 'todoList-task';\n\n        return (\n            <div className={classForTask}>\n                <input type=\"checkbox\"\n                       onClick={this.onIsDoneChanged}\n                       checked={isDone}\n                />\n                {this.state.isEdit\n                    ? <input onBlur={this.deactivateEditMode}\n                             onChange={this.onInputChanged}\n                             autoFocus={true}\n                             value={this.state.title}/>\n                    : <span\n                        onClick={this.activateEditMode}>{this.state.title} {this.props.task.priority}</span>\n                }\n                <DeleteItemButton delete={this.props.deleteTask}/>\n            </div>\n        );\n    }\n}\n\nexport default TodoListTask;","import React from 'react';\nimport TodoListTask from \"./TodoListTask\";\n\nclass TodoListTasks extends React.Component {\n    render = () => {\n        //let tasksElements = this.props.tasks.sort((a, b) => b.priority.length - a.priority.length);\n\n        let tasksElements = this.props.tasks.filter((task) => {\n            switch (this.props.filterValue) {\n                case \"All\":\n                    return true;\n                case 'Completed':\n                    return task.isDone;\n                case 'Active':\n                    return !task.isDone;\n            }\n        });\n\n        tasksElements = tasksElements.map(task => <TodoListTask task={task}\n                                                                changeTask={this.props.changeTask}\n                                                                deleteTask={() => this.props.deleteTask(task.id)}/>);\n\n        return (\n            <div className=\"todoList-tasks\">\n                {tasksElements}\n            </div>\n        );\n    }\n}\n\nexport default TodoListTasks;","import React from 'react';\n\nclass TodoListFooter extends React.Component {\n    state = {\n        isHidden: false\n    };\n\n    onAllFilterClick = () => this.props.changeFilter(\"All\");\n    onCompletedFilterClick = () => this.props.changeFilter(\"Completed\");\n    onActiveFilterClick = () => this.props.changeFilter(\"Active\");\n    onShowOrHideFiltersClick = () => this.setState((state) => {\n        return {isHidden: !state.isHidden}\n    });\n\n    render = (props) => {\n        let classForAll = this.props.filterValue === \"All\" ? \"filter-active\" : \"\";\n        let classForCompleted = this.props.filterValue === \"Completed\" ? \"filter-active\" : \"\";\n        let classForActive = this.props.filterValue === \"Active\" ? \"filter-active\" : \"\";\n\n        return (\n            <div className=\"todoList-footer\">\n                {!this.state.isHidden &&\n                <div className=\"buttons\">\n                    <button onClick={this.onAllFilterClick} className={classForAll}>All</button>\n                    <button onClick={this.onCompletedFilterClick} className={classForCompleted}>Completed</button>\n                    <button onClick={this.onActiveFilterClick} className={classForActive}>Active</button>\n                    <span onClick={this.onShowOrHideFiltersClick}>hide</span>\n                </div>}\n                {this.state.isHidden &&\n                <span onClick={this.onShowOrHideFiltersClick}>show</span>}\n            </div>\n        );\n    }\n}\n\nexport default TodoListFooter;","export const ADD_TODOLIST = 'TodoList/Reducer/ADD-TODOLIST';\r\nexport const ADD_TASK = 'TodoList/Reducer/ADD-TASK';\r\nexport const CHANGE_TASK = 'TodoList/Reducer/CHANGE-TASK';\r\nexport const DELETE_TODOLIST = 'TodoList/Reducer/DELETE-TODOLIST';\r\nexport const DELETE_TASK = 'TodoList/Reducer/DELETE-TASK';\r\nexport const SET_TODOLISTS = 'TodoList/Reducer/SET-TODOLISTS';\r\nexport const SET_TASKS = 'TodoList/Reducer/SET-TASKS';\r\nexport const CHANGE_TODOLIST = 'TodoList/Reducer/CHANGE_TODOLIST';\r\n\r\nconst initialState = {\r\n    \"todolists\": []\r\n};\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_TODOLISTS:\r\n            return {\r\n                ...state,\r\n                todolists: action.todolists.map(tl => ({...tl, tasks: []}))\r\n            };\r\n        case ADD_TODOLIST:\r\n            let newTodoList = {...action.newTodolist};\r\n            newTodoList.tasks = [];\r\n            return {\r\n                ...state,\r\n                todolists: [...state.todolists, newTodoList]\r\n            };\r\n        case ADD_TASK:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(tl => {\r\n                    if (tl.id === action.todolistId) {\r\n                        return {...tl, tasks: [...tl.tasks, action.newTask]};\r\n                    } else {\r\n                        return tl\r\n                    }\r\n                })\r\n            };\r\n        case CHANGE_TASK:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(tl => {\r\n                    if (tl.id === action.todolistId) {\r\n                        return {\r\n                            ...tl,\r\n                            tasks: tl.tasks.map(t => {\r\n                                if (t.id === action.taskId) {\r\n                                    return {...t, ...action.obj}\r\n                                } else {\r\n                                    return t;\r\n                                }\r\n                            })\r\n                        }\r\n                    } else {\r\n                        return tl\r\n                    }\r\n                })\r\n            };\r\n        case DELETE_TODOLIST:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.filter(tl => {\r\n                    if (tl.id !== action.todolistId) {\r\n                        return tl\r\n                    }\r\n                })\r\n            };\r\n        case DELETE_TASK:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(tl => {\r\n                    if (tl.id === action.todolistId) {\r\n                        return {\r\n                            ...tl,\r\n                            tasks: tl.tasks.filter(t => {\r\n                                if (t.id !== action.taskId) {\r\n                                    return t;\r\n                                }\r\n                            })\r\n                        }\r\n                    } else {\r\n                        return tl\r\n                    }\r\n                })\r\n            };\r\n        case SET_TASKS:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(tl => {\r\n                    if (tl.id === action.todolistId) {\r\n                        return {\r\n                            ...tl,\r\n                            tasks: action.tasks\r\n                        }\r\n                    } else {\r\n                        return tl;\r\n                    }\r\n                })\r\n            };\r\n        case CHANGE_TODOLIST:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(tl => {\r\n                    if (tl.id === action.todolistId) {\r\n                        return {\r\n                            ...tl, title: action.newTitle\r\n                        }\r\n                    } else {\r\n                        return tl;\r\n                    }\r\n                })\r\n            };\r\n        default: {\r\n            console.log(\"reducer: \", action);\r\n            return state;\r\n        }\r\n    }\r\n};\r\n\r\nexport const addTask = (newTask, todolistId) => ({type: ADD_TASK, newTask, todolistId});\r\nexport const changeTask = (todolistId, taskId, obj) => ({type: CHANGE_TASK, todolistId, taskId, obj});\r\nexport const deleteTodolist = (todolistId) => ({type: DELETE_TODOLIST, todolistId});\r\nexport const deleteTask = (todolistId, taskId) => ({type: DELETE_TASK, todolistId, taskId});\r\nexport const addTodolist = (newTodolist) => ({type: ADD_TODOLIST, newTodolist});\r\nexport const setTodolists = (todolists) => ({type: SET_TODOLISTS, todolists});\r\nexport const setTasks = (tasks, todolistId) => ({type: SET_TASKS, tasks, todolistId});\r\nexport const changeTodolist = (todolistId, newTitle) => ({type: CHANGE_TODOLIST, todolistId, newTitle});\r\n\r\nexport default reducer;","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/todo-lists\",\r\n    withCredentials: true,\r\n    headers: {\"API-KEY\": \"2e403f5c-5d3b-4ee4-a662-100f73be85da\"}\r\n});\r\n\r\nexport const api = {\r\n    setTasks(todolistId) {\r\n        return instance.get(`/${todolistId}/tasks`)\r\n    },\r\n    addTask(todolistId, title) {\r\n        return instance.post(`/${todolistId}/tasks`, {title: title})\r\n    },\r\n    deleteTask(todolistId, taskId) {\r\n        return instance.delete(`/${todolistId}/tasks/${taskId}`)\r\n    },\r\n    deleteTodolist(todolistId) {\r\n        return instance.delete(`/${todolistId}`)\r\n    },\r\n    changeTask(todolistId, taskId, updatedTask) {\r\n        return instance.put(`/${todolistId}/tasks/${taskId}`, updatedTask)\r\n    },\r\n    setTodolists() {\r\n        return instance.get();\r\n    },\r\n    addTodolist(title) {\r\n        return instance.post(``, {title})\r\n    },\r\n    changeTodolist(todolistId, newTitle) {\r\n        return instance.put(`${todolistId}`, {title: newTitle})\r\n    }\r\n};","import React from 'react';\r\nimport './App.css';\r\nimport TodoListHeader from \"./TodoListHeader\";\r\nimport TodoListTasks from \"./TodoListTasks\";\r\nimport TodoListFooter from \"./TodoListFooter\";\r\nimport {connect} from \"react-redux\";\r\nimport {addTask, changeTask, changeTodolist, deleteTask, deleteTodolist, setTasks} from \"./reducer\";\r\nimport {api} from \"./api\";\r\n\r\nclass TodoList extends React.Component {\r\n    componentDidMount() {\r\n        this.restoreState();\r\n    }\r\n\r\n    state = {\r\n        filterValue: 'All'\r\n    };\r\n\r\n    changeFilter = (newFilterValue) => {\r\n        this.setState({\r\n            filterValue: newFilterValue\r\n        });\r\n    };\r\n\r\n    restoreState = () => {\r\n        api.setTasks(this.props.id)\r\n            .then(res => {\r\n                let tasks = res.data.items;\r\n                this.props.setTasks(tasks, this.props.id);\r\n            });\r\n    };\r\n\r\n    addTask = (title) => {\r\n        api.addTask(this.props.id, title)\r\n            .then(res => {\r\n                let task = res.data.data.item;\r\n                this.props.addTask(task, this.props.id);\r\n            });\r\n    };\r\n\r\n    deleteTask = (taskId) => {\r\n        api.deleteTask(this.props.id, taskId)\r\n            .then(res => {\r\n                this.props.deleteTask(this.props.id, taskId);\r\n            });\r\n    };\r\n\r\n    deleteTodolist = () => {\r\n        api.deleteTodolist(this.props.id)\r\n            .then(res => {\r\n                this.props.deleteTodolist(this.props.id);\r\n            });\r\n    };\r\n\r\n    changeTask = (taskId, updatedTask) => {\r\n        api.changeTask(this.props.id, taskId, updatedTask)\r\n            .then(res => {\r\n                this.props.changeTask(this.props.id, taskId, updatedTask)\r\n            })\r\n    };\r\n\r\n    changeTodolist = (title) => {\r\n        api.changeTodolist(this.props.id, title)\r\n            .then(res => {\r\n                this.props.changeTodolist(this.props.id, title)\r\n            })\r\n    };\r\n\r\n    render = () => {\r\n        return (\r\n            <div className=\"todoList\">\r\n                <TodoListHeader addItem={this.addTask} todoListTitle={this.props.todoListTitle}\r\n                                deleteTodolist={this.deleteTodolist} changeTodolist={this.changeTodolist}/>\r\n                <TodoListTasks changeTask={this.changeTask}\r\n\r\n                               tasks={this.props.tasks}\r\n                               filterValue={this.state.filterValue}\r\n                               deleteTask={this.deleteTask}/>\r\n                <TodoListFooter filterValue={this.state.filterValue}\r\n                                changeFilter={this.changeFilter}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst ConnectedTodolist = connect(null, {\r\n    addTask,\r\n    changeTask,\r\n    deleteTodolist,\r\n    deleteTask,\r\n    setTasks,\r\n    changeTodolist\r\n})(TodoList);\r\n\r\nexport default ConnectedTodolist;","import React from 'react';\nimport './App.css';\nimport TodoList from \"./TodoList\";\nimport AddNewItemForm from \"./AddNewItemForm\";\nimport {connect} from \"react-redux\";\nimport {addTodolist, setTodolists} from \"./reducer\";\nimport {api} from \"./api\";\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.restoreState();\n    }\n\n    restoreState = () => {\n        api.setTodolists()\n            .then(res => {\n                this.props.setTodolists(res.data);\n            });\n    };\n\n    addTodoList = (title) => {\n        api.addTodolist(title)\n            .then(res => {\n                const todolist = res.data.data.item;\n                this.props.addTodolist(todolist);\n            });\n    };\n\n    render = () => {\n        const todoListElements = this.props.todolists.map(tl => <TodoList id={tl.id} todoListTitle={tl.title}\n                                                                          tasks={tl.tasks}/>);\n\n        return (\n            <div className=\"App\">\n                <AddNewItemForm addItem={this.addTodoList}/>\n                {todoListElements}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        todolists: state.todolists\n    }\n};\n\nconst ConnectedApp = connect(mapStateToProps, {addTodolist, setTodolists})(App);\nexport default ConnectedApp;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {createStore} from \"redux\";\r\nimport reducer from \"./reducer\";\r\n\r\nconst store = createStore(reducer);\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(<Provider store={store}><App/></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}