{"version":3,"sources":["preloader.svg","TodoListTitle.js","AddNewItemForm.js","DeleteItemButton.js","TodoListHeader.js","utils/ItemTypes.js","TodoListTask.js","TodoListTasks.js","TodoListFooter.js","api.js","redux/reducer.js","TodoList.js","Preloader.js","App.js","serviceWorker.js","redux/store.js","index.js"],"names":["module","exports","__webpack_require__","p","TodoListTitle","state","isEdit","title","_this","props","todoListTitle","activateEditMode","setState","deactivateEditMode","changeTodolist","onInputChanged","e","currentTarget","value","_handleKeyDown","key","render","react_default","a","createElement","onBlur","onChange","autoFocus","onKeyDown","onClick","React","Component","AddNewItemForm","error","onAddItemClick","addItem","inputOnChange","trim","inputOnKeyPress","classForButton","className","onKeyPress","type","placeholder","DeleteItemButton","delete","TodoListHeader","src_TodoListTitle","src_DeleteItemButton","deleteTodolist","src_AddNewItemForm","ItemTypes","TodoListTask","_useState","useState","_useState2","Object","slicedToArray","setIsEdit","_useState3","task","_useState4","setTitle","_useDrag","useDrag","item","id","todolistId","collect","monitor","isDragging","_useDrag2","drag","updatedTask","_objectSpread","changeTask","isDone","status","classForTask","ref","checked","defaultChecked","priority","deleteTask","TodoListTasks","tasksElements","tasks","filter","filterValue","map","src_TodoListTask","TodoListFooter","isHidden","onAllFilterClick","changeFilter","onCompletedFilterClick","onActiveFilterClick","onShowOrHideFiltersClick","classForAll","classForCompleted","classForActive","instance","axios","create","baseURL","withCredentials","headers","API-KEY","api","get","concat","post","taskId","put","newTitle","email","password","ADD_TASK","initialState","todolists","isFetching","addTaskAC","newTask","deleteTaskAC","toggleIsFetchingAC","reducer","arguments","length","undefined","action","reducer_objectSpread","tl","newTodoList","newTodolist","toConsumableArray","t","obj","connect","addTask","dispatch","then","res","data","changeTaskAC","deleteTodolistAC","getTasks","items","setTasksAC","changeTodolistAC","moveTask","fromTodolistId","toTodolistId","_ref","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","sent","stop","_x","apply","this","setFilterValue","_useDrop","useDrop","accept","drop","isOver","_useDrop2","useEffect","src_TodoListHeader","src_TodoListTasks","src_TodoListFooter","newFilterValue","Preloader","src","preloader","alt","App","todoListElements","src_TodoList","DndProvider","backend","Backend","src_Preloader","addTodolist","login","getTodolists","todolist","_callee2","_context2","Boolean","window","location","hostname","match","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fcf7331f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/preloader.982cf99c.svg\";","import React from 'react';\n\nclass TodoListTitle extends React.Component {\n    state = {\n        isEdit: false,\n        title: this.props.todoListTitle\n    };\n\n    activateEditMode = () => {\n        this.setState({\n            isEdit: true\n        })\n    };\n\n    deactivateEditMode = () => {\n        this.props.changeTodolist(this.state.title);\n\n        this.setState({\n            isEdit: false\n        });\n    };\n\n    onInputChanged = (e) => {\n        this.setState({title: e.currentTarget.value});\n    };\n\n    _handleKeyDown = (e) => {\n        if (e.key === 'Enter') {\n            this.deactivateEditMode();\n        }\n    };\n\n    render = () => {\n        return (\n            <div>\n                {this.state.isEdit\n                    ? <input onBlur={this.deactivateEditMode}\n                             onChange={this.onInputChanged}\n                             autoFocus={true}\n                             value={this.state.title}\n                             onKeyDown={this._handleKeyDown}/>\n                    : <h3 onClick={this.activateEditMode}>{this.state.title}</h3>}\n            </div>);\n    }\n}\n\nexport default TodoListTitle;","import React from 'react';\r\n\r\nclass AddNewItemForm extends React.Component {\r\n    state = {\r\n        error: true,\r\n        title: ''\r\n    };\r\n\r\n    onAddItemClick = () => {\r\n        if (!this.state.error) {\r\n            this.props.addItem(this.state.title);\r\n            this.setState({error: true, title: ''});\r\n        }\r\n    };\r\n\r\n    inputOnChange = (e) => {\r\n        if (e.currentTarget.value.trim() === '') {\r\n            this.setState({error: true, title: ''});\r\n        } else {\r\n            this.setState({\r\n                error: false, title: e.currentTarget.value\r\n            });\r\n        }\r\n    };\r\n\r\n    inputOnKeyPress = (e) => {\r\n        if (e.key === 'Enter')\r\n            this.onAddItemClick(e);\r\n    };\r\n\r\n    render = () => {\r\n        const classForButton = this.state.error ? 'button error' : 'button';\r\n\r\n        return (\r\n            <div className=\"todoList-newItemForm\">\r\n                <input className='newItemForm-input' onKeyPress={this.inputOnKeyPress} onChange={this.inputOnChange}\r\n                       type=\"text\"\r\n                       placeholder=\"New item name\"\r\n                       value={this.state.title}/>\r\n                <button className={classForButton} onClick={this.onAddItemClick}>Add</button>\r\n            </div>);\r\n    };\r\n}\r\n\r\nexport default AddNewItemForm;","import React from 'react';\r\n\r\nclass DeleteItemButton extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <button className='delete-button' onClick={this.props.delete}><strong>X</strong></button>);\r\n    };\r\n}\r\n\r\nexport default DeleteItemButton;","import React from 'react';\nimport TodoListTitle from './TodoListTitle';\nimport AddNewItemForm from './AddNewItemForm';\nimport DeleteItemButton from './DeleteItemButton';\n\nclass TodoListHeader extends React.Component {\n    render = () => {\n        return (\n            <div className=\"todoList-header\">\n                <div className=\"todoList-title\">\n                    <TodoListTitle todoListTitle={this.props.todoListTitle} changeTodolist={this.props.changeTodolist}/>\n                    <DeleteItemButton delete={this.props.deleteTodolist}/>\n                </div>\n                <AddNewItemForm addItem={this.props.addItem}/>\n            </div>);\n    };\n}\n\nexport default TodoListHeader;","export default {\r\n    TASK: 'task'\r\n}","import React, {useState} from 'react';\nimport DeleteItemButton from './DeleteItemButton';\nimport {useDrag} from 'react-dnd';\nimport ItemTypes from './utils/ItemTypes';\n\nconst TodoListTask = (props) => {\n    const [isEdit, setIsEdit] = useState(false);\n    const [title, setTitle] = useState(props.task.title);\n\n    const [collectedProps, drag] = useDrag({\n        item: {type: ItemTypes.TASK, id: props.task.id, todolistId: props.todolistId, title},\n        collect: monitor => ({isDragging: !!monitor.isDragging()})\n    });\n\n    const activateEditMode = () => {\n        setIsEdit(true);\n    };\n\n    const deactivateEditMode = () => {\n        const updatedTask = {...props.task, title};\n        props.changeTask(props.task.id, updatedTask);\n\n        setIsEdit(false);\n    };\n\n    const onIsDoneChanged = (e) => {\n        const status = e.currentTarget.checked ? 2 : 0;\n        const updatedTask = {...props.task, status};\n        props.changeTask(props.task.id, updatedTask);\n    };\n\n    const onInputChanged = (e) => {\n        setTitle(e.currentTarget.value);\n    };\n\n    const _handleKeyDown = (e) => {\n        if (e.key === 'Enter') {\n            deactivateEditMode();\n        }\n    };\n\n    const isDone = (props.task.status === 2);\n    const classForTask = isDone ? 'todoList-task done' : 'todoList-task';\n\n    return (\n        <div className={classForTask} ref={drag}>\n            <div>\n                <input type=\"checkbox\"\n                       onClick={onIsDoneChanged}\n                       defaultChecked={isDone}\n                />\n                {isEdit\n                    ? <input onBlur={deactivateEditMode}\n                             onChange={onInputChanged}\n                             autoFocus\n                             value={title}\n                             onKeyDown={_handleKeyDown}/>\n                    : <span\n                        onClick={activateEditMode}>{title} {props.task.priority}</span>\n                }\n            </div>\n            <DeleteItemButton delete={props.deleteTask}/>\n        </div>\n    );\n};\n\nexport default TodoListTask;","import React from 'react';\nimport TodoListTask from './TodoListTask';\n\nclass TodoListTasks extends React.Component {\n    render = () => {\n\n        //let tasksElements = this.props.tasks.sort((a, b) => b.priority.length - a.priority.length);\n\n        let tasksElements = this.props.tasks.filter((task) => {\n            switch (this.props.filterValue) {\n                case 'All':\n                    return true;\n                case 'Completed':\n                    return task.isDone;\n                case 'Active':\n                    return !task.isDone;\n            }\n        });\n\n        tasksElements = tasksElements.map(task => <TodoListTask key={task.id} task={task}\n                                                                changeTask={this.props.changeTask}\n                                                                deleteTask={() => this.props.deleteTask(task.id)}\n                                                                todolistId={this.props.todolistId}/>);\n\n        return (\n            <div className=\"todoList-tasks\">\n                {tasksElements}\n            </div>\n        );\n    };\n}\n\nexport default TodoListTasks;","import React from 'react';\n\nclass TodoListFooter extends React.Component {\n    state = {\n        isHidden: false\n    };\n\n    onAllFilterClick = () => this.props.changeFilter(\"All\");\n    onCompletedFilterClick = () => this.props.changeFilter(\"Completed\");\n    onActiveFilterClick = () => this.props.changeFilter(\"Active\");\n    onShowOrHideFiltersClick = () => this.setState((state) => {\n        return {isHidden: !state.isHidden}\n    });\n\n    render = () => {\n        let classForAll = this.props.filterValue === \"All\" ? \"filter-active\" : \"\";\n        let classForCompleted = this.props.filterValue === \"Completed\" ? \"filter-active\" : \"\";\n        let classForActive = this.props.filterValue === \"Active\" ? \"filter-active\" : \"\";\n\n        return (\n            <div className=\"todoList-footer\">\n                {!this.state.isHidden &&\n                <div className=\"buttons\">\n                    <button onClick={this.onAllFilterClick} className={classForAll}>All</button>\n                    <button onClick={this.onCompletedFilterClick} className={classForCompleted}>Completed</button>\n                    <button onClick={this.onActiveFilterClick} className={classForActive}>Active</button>\n                    <span onClick={this.onShowOrHideFiltersClick}>hide</span>\n                </div>}\n                {this.state.isHidden &&\n                <span onClick={this.onShowOrHideFiltersClick}>show</span>}\n            </div>\n        );\n    }\n}\n\nexport default TodoListFooter;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.1',\r\n    withCredentials: true,\r\n    headers: {'API-KEY': '2e403f5c-5d3b-4ee4-a662-100f73be85da'}\r\n});\r\n\r\nexport const api = {\r\n    setTasks(todolistId) {\r\n        return instance.get(`/todo-lists/${todolistId}/tasks`);\r\n    },\r\n    addTask(todolistId, title) {\r\n        return instance.post(`/todo-lists/${todolistId}/tasks`, {title: title});\r\n    },\r\n    deleteTask(todolistId, taskId) {\r\n        return instance.delete(`/todo-lists/${todolistId}/tasks/${taskId}`);\r\n    },\r\n    deleteTodolist(todolistId) {\r\n        return instance.delete(`/todo-lists/${todolistId}`);\r\n    },\r\n    changeTask(todolistId, taskId, updatedTask) {\r\n        return instance.put(`/todo-lists/${todolistId}/tasks/${taskId}`, updatedTask);\r\n    },\r\n    setTodolists() {\r\n        return instance.get(`/todo-lists`);\r\n    },\r\n    addTodolist(title) {\r\n        return instance.post(`/todo-lists`, {title});\r\n    },\r\n    changeTodolist(todolistId, newTitle) {\r\n        return instance.put(`/todo-lists/${todolistId}`, {title: newTitle});\r\n    },\r\n    login(email, password) {\r\n        return instance.post(`auth/login`, {email, password});\r\n    }\r\n};","import {api} from '../api';\r\n\r\nconst ADD_TODOLIST = 'TodoList/reducer/ADD-TODOLIST';\r\nconst ADD_TASK = 'TodoList/reducer/ADD-TASK';\r\nconst CHANGE_TASK = 'TodoList/reducer/CHANGE-TASK';\r\nconst DELETE_TODOLIST = 'TodoList/reducer/DELETE-TODOLIST';\r\nconst DELETE_TASK = 'TodoList/reducer/DELETE-TASK';\r\nconst SET_TODOLISTS = 'TodoList/reducer/SET-TODOLISTS';\r\nconst SET_TASKS = 'TodoList/reducer/SET-TASKS';\r\nconst CHANGE_TODOLIST = 'TodoList/reducer/CHANGE_TODOLIST';\r\nconst TOGGLE_IS_FETCHING = 'TodoList/reducer/TOGGLE_IS_FETCHING';\r\n\r\nconst initialState = {\r\n    'todolists': [],\r\n    isFetching: false\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_TODOLISTS:\r\n            return {\r\n                ...state,\r\n                todolists: action.todolists.map(tl => ({...tl, tasks: []}))\r\n            };\r\n        case ADD_TODOLIST:\r\n            let newTodoList = {...action.newTodolist};\r\n            newTodoList.tasks = [];\r\n            return {\r\n                ...state,\r\n                todolists: [...state.todolists, newTodoList]\r\n            };\r\n        case ADD_TASK:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(tl => {\r\n                    if (tl.id === action.todolistId) {\r\n                        return {...tl, tasks: [...tl.tasks, action.newTask]};\r\n                    } else {\r\n                        return tl;\r\n                    }\r\n                })\r\n            };\r\n        case CHANGE_TASK:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(tl => {\r\n                    if (tl.id === action.todolistId) {\r\n                        return {\r\n                            ...tl,\r\n                            tasks: tl.tasks.map(t => {\r\n                                if (t.id === action.taskId) {\r\n                                    return {...t, ...action.obj};\r\n                                } else {\r\n                                    return t;\r\n                                }\r\n                            })\r\n                        };\r\n                    } else {\r\n                        return tl;\r\n                    }\r\n                })\r\n            };\r\n        case DELETE_TODOLIST:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.filter(tl => {\r\n                    if (tl.id !== action.todolistId) {\r\n                        return tl;\r\n                    }\r\n                })\r\n            };\r\n        case DELETE_TASK:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(tl => {\r\n                    if (tl.id === action.todolistId) {\r\n                        return {\r\n                            ...tl,\r\n                            tasks: tl.tasks.filter(t => {\r\n                                if (t.id !== action.taskId) {\r\n                                    return t;\r\n                                }\r\n                            })\r\n                        };\r\n                    } else {\r\n                        return tl;\r\n                    }\r\n                })\r\n            };\r\n        case SET_TASKS:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(tl => {\r\n                    if (tl.id === action.todolistId) {\r\n                        return {\r\n                            ...tl,\r\n                            tasks: action.tasks\r\n                        };\r\n                    } else {\r\n                        return tl;\r\n                    }\r\n                })\r\n            };\r\n        case CHANGE_TODOLIST:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(tl => {\r\n                    if (tl.id === action.todolistId) {\r\n                        return {\r\n                            ...tl, title: action.newTitle\r\n                        };\r\n                    } else {\r\n                        return tl;\r\n                    }\r\n                })\r\n            };\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching};\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n\r\nconst addTaskAC = (newTask, todolistId) => ({type: ADD_TASK, newTask, todolistId});\r\nconst changeTaskAC = (todolistId, taskId, obj) => ({type: CHANGE_TASK, todolistId, taskId, obj});\r\nconst deleteTodolistAC = (todolistId) => ({type: DELETE_TODOLIST, todolistId});\r\nconst deleteTaskAC = (todolistId, taskId) => ({type: DELETE_TASK, todolistId, taskId});\r\nconst addTodolistAC = (newTodolist) => ({type: ADD_TODOLIST, newTodolist});\r\nconst setTodolists = (todolists) => ({type: SET_TODOLISTS, todolists});\r\nconst setTasksAC = (tasks, todolistId) => ({type: SET_TASKS, tasks, todolistId});\r\nconst changeTodolistAC = (todolistId, newTitle) => ({type: CHANGE_TODOLIST, todolistId, newTitle});\r\nconst toggleIsFetchingAC = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\n\r\nexport const moveTask = (taskId, fromTodolistId, toTodolistId, title) => async (dispatch) => {\r\n    dispatch(toggleIsFetchingAC(true));\r\n\r\n    let response = await api.addTask(toTodolistId, title);\r\n    let task = response.data.data.item;\r\n    dispatch(addTaskAC(task, toTodolistId));\r\n\r\n    await api.deleteTask(fromTodolistId, taskId);\r\n    dispatch(deleteTaskAC(fromTodolistId, taskId));\r\n\r\n    dispatch(toggleIsFetchingAC(false));\r\n};\r\n\r\nexport const getTodolists = () => (dispatch) => {\r\n    dispatch(toggleIsFetchingAC(true));\r\n    api.setTodolists()\r\n        .then(res => {\r\n            dispatch(setTodolists(res.data));\r\n            dispatch(toggleIsFetchingAC(false));\r\n        });\r\n};\r\n\r\nexport const addTodolist = (title) => (dispatch) => {\r\n    dispatch(toggleIsFetchingAC(true));\r\n    api.addTodolist(title)\r\n        .then(res => {\r\n            const todolist = res.data.data.item;\r\n            dispatch(addTodolistAC(todolist));\r\n            dispatch(toggleIsFetchingAC(false));\r\n        });\r\n};\r\n\r\nexport const getTasks = (todolistId) => (dispatch) => {\r\n    dispatch(toggleIsFetchingAC(true));\r\n    api.setTasks(todolistId)\r\n        .then(res => {\r\n            let tasks = res.data.items;\r\n            dispatch(setTasksAC(tasks, todolistId));\r\n            dispatch(toggleIsFetchingAC(false));\r\n        });\r\n};\r\n\r\nexport const addTask = (todolistId, title) => (dispatch) => {\r\n    dispatch(toggleIsFetchingAC(true));\r\n    api.addTask(todolistId, title)\r\n        .then(res => {\r\n            let task = res.data.data.item;\r\n            dispatch(addTaskAC(task, todolistId));\r\n            dispatch(toggleIsFetchingAC(false));\r\n        });\r\n};\r\n\r\nexport const deleteTask = (todolistId, taskId) => (dispatch) => {\r\n    dispatch(toggleIsFetchingAC(true));\r\n    api.deleteTask(todolistId, taskId)\r\n        .then(res => {\r\n            dispatch(deleteTaskAC(todolistId, taskId));\r\n            dispatch(toggleIsFetchingAC(false));\r\n        });\r\n};\r\n\r\nexport const deleteTodolist = (todolistId) => (dispatch) => {\r\n    dispatch(toggleIsFetchingAC(true));\r\n    api.deleteTodolist(todolistId)\r\n        .then(res => {\r\n            dispatch(deleteTodolistAC(todolistId));\r\n            dispatch(toggleIsFetchingAC(false));\r\n        });\r\n};\r\n\r\nexport const changeTask = (todolistId, taskId, updatedTask) => (dispatch) => {\r\n    dispatch(toggleIsFetchingAC(true));\r\n    api.changeTask(todolistId, taskId, updatedTask)\r\n        .then(res => {\r\n            dispatch(changeTaskAC(todolistId, taskId, updatedTask));\r\n            dispatch(toggleIsFetchingAC(false));\r\n        });\r\n};\r\n\r\nexport const changeTodolist = (todolistId, title) => (dispatch) => {\r\n    dispatch(toggleIsFetchingAC(true));\r\n    api.changeTodolist(todolistId, title)\r\n        .then(res => {\r\n            dispatch(changeTodolistAC(todolistId, title));\r\n            dispatch(toggleIsFetchingAC(false));\r\n        });\r\n};\r\n\r\nexport const login = (email, password) => async () => {\r\n    await api.login(email, password);\r\n};\r\n\r\nexport default reducer;","import React, {useEffect, useState} from 'react';\r\nimport './App.css';\r\nimport TodoListHeader from './TodoListHeader';\r\nimport TodoListTasks from './TodoListTasks';\r\nimport TodoListFooter from './TodoListFooter';\r\nimport {connect} from 'react-redux';\r\nimport {addTask, changeTask, changeTodolist, deleteTask, deleteTodolist, getTasks, moveTask} from './redux/reducer';\r\nimport ItemTypes from './utils/ItemTypes';\r\nimport {useDrop} from 'react-dnd';\r\n\r\nconst TodoList = (props) => {\r\n    const [filterValue, setFilterValue] = useState('All');\r\n    const [collectedProps, drop] = useDrop({\r\n        accept: ItemTypes.TASK,\r\n        drop: (item) => props.moveTask(item.id, item.todolistId, props.id, item.title),\r\n        collect: monitor => ({isOver: !!monitor.isOver()})\r\n    });\r\n\r\n    useEffect(() => {\r\n        props.getTasks(props.id);\r\n    }, []);\r\n\r\n    const addTask = (title) => {\r\n        props.addTask(props.id, title);\r\n    };\r\n\r\n    const deleteTask = (taskId) => {\r\n        props.deleteTask(props.id, taskId);\r\n    };\r\n\r\n    const changeTask = (taskId, updatedTask) => {\r\n        props.changeTask(props.id, taskId, updatedTask);\r\n    };\r\n\r\n    const changeTodolist = (title) => {\r\n        props.changeTodolist(props.id, title);\r\n    };\r\n\r\n    const changeFilter = (newFilterValue) => {\r\n        setFilterValue(newFilterValue);\r\n    };\r\n\r\n    return (\r\n        <div className=\"todoList\" ref={drop}>\r\n            <TodoListHeader addItem={addTask}\r\n                            todoListTitle={props.todoListTitle}\r\n                            deleteTodolist={() => props.deleteTodolist(props.id)}\r\n                            changeTodolist={changeTodolist}/>\r\n            <TodoListTasks changeTask={changeTask}\r\n                           tasks={props.tasks}\r\n                           filterValue={filterValue}\r\n                           deleteTask={deleteTask}\r\n                           todolistId={props.id}/>\r\n            <TodoListFooter filterValue={filterValue}\r\n                            changeFilter={changeFilter}/>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default connect(null, {\r\n    addTask,\r\n    changeTask,\r\n    deleteTodolist,\r\n    deleteTask,\r\n    getTasks,\r\n    changeTodolist,\r\n    moveTask\r\n})(TodoList);","import React from 'react';\r\nimport preloader from \"./preloader.svg\";\r\n\r\nlet Preloader = () => {\r\n    return <img className='preloader' src={preloader} alt=\"\"/>\r\n};\r\n\r\nexport default Preloader;","import React from 'react';\nimport './App.css';\nimport TodoList from './TodoList';\nimport AddNewItemForm from './AddNewItemForm';\nimport {connect} from 'react-redux';\nimport {addTodolist, getTodolists, login} from './redux/reducer';\nimport Backend from 'react-dnd-html5-backend';\nimport {DndProvider} from 'react-dnd';\nimport Preloader from './Preloader';\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.login('free@samuraijs.com', 'free');\n        this.props.getTodolists();\n    }\n\n    render = () => {\n        const todoListElements = this.props.todolists.map(tl => <TodoList key={tl.id} id={tl.id}\n                                                                          todoListTitle={tl.title}\n                                                                          tasks={tl.tasks}/>);\n\n        return (\n            <DndProvider backend={Backend}>\n                <div className=\"App\">\n                    {this.props.isFetching && <Preloader/>}\n\n                    <AddNewItemForm addItem={this.props.addTodolist}/>\n                    {todoListElements}\n                </div>\n            </DndProvider>\n        );\n    };\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        todolists: state.todolists,\n        isFetching: state.isFetching\n    };\n};\n\nexport default connect(mapStateToProps, {addTodolist, getTodolists, login})(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {applyMiddleware, createStore} from 'redux';\r\nimport reducer from './reducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunkMiddleware));\r\nwindow.store = store;\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(<Provider store={store}><App/></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}